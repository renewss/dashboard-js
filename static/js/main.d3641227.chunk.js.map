{"version":3,"sources":["components/Alert.jsx","constants/styleConstants.js","pages/login/index.js","pages/logout/index.js","pages/home/index.js","pages/dashboard/components/UserAvatar.jsx","pages/dashboard/components/Notifications.jsx","pages/dashboard/components/Header.jsx","assets/images/logo.svg","pages/dashboard/components/Sidebar.jsx","pages/dashboard/components/Navbar.js","pages/dashboard/views/ChartView.js","pages/dashboard/views/GraphView.js","redux/actionTypes/dialogFormActionTypes.js","redux/actions/dialogFormActions.js","redux/actionTypes/tableDataActionTypes.js","redux/actions/tableDataActions.js","pages/dashboard/components/DialogForm.jsx","pages/dashboard/views/TableView.js","pages/dashboard/index.js","App.js","reportWebVitals.js","redux/reducers/index.js","redux/reducers/dialogReducer.js","redux/reducers/tableDataReducer.js","redux/store.js","index.js"],"names":["Alert","props","Snackbar","open","autoHideDuration","onClose","elevation","variant","severity","message","VALUES","sideBarWidthExpand","colorPrimary","colorSecondary","colorBgPrimary","colorBgSecondary","useStyles","makeStyles","theme","root","maxWidth","height","padding","margin","display","justifyContent","alignItems","paper","input","marginBottom","button","marginTop","color","styleConstants","background","Login","classes","useState","username","setUsername","password","setPassword","passHidden","setPassHidden","submitted","setSubmitted","alert","setAlert","Container","className","clsx","Paper","Box","onSubmit","e","preventDefault","cookies","Cookies","setTimeout","set","path","expires","Date","now","window","location","FormControl","TextField","required","id","label","value","onChange","target","InputProps","endAdornment","InputAdornment","position","AccountCircle","type","IconButton","aria-label","onClick","onMouseDown","edge","VisibilityOff","Visibility","Button","size","disabled","CircularProgress","style","event","reason","Logout","useEffect","remove","width","textContainer","top","transform","textAlign","link","textDecoration","divider","marginLeft","backgroundColor","particles","Home","params","number","shape","Typography","strings","typeSpeed","backSpeed","loop","Divider","to","UserAvatar","anchorEl","setAnchorEl","handleClose","aria-controls","aria-haspopup","currentTarget","Avatar","keepMounted","Boolean","url","MenuItem","Notifications","counter","setCounter","Badge","badgeContent","map","item","drawerWidth","grow","flexGrow","appBar","zIndex","drawer","appBarShift","menuBox","Header","useRouteMatch","AppBar","Toolbar","handleDrawerToggle","Menu","marginRight","menuList","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","mixins","icon","logoImg","Sidebar","Drawer","Icon","src","logoSvg","alt","noWrap","List","index","ListItem","ListItemIcon","Mail","ListItemText","primary","hide","Navbar","React","setOpen","CssBaseline","data","argument","View1","valueField","argumentField","Demo","state","month","sale","total","chartData","this","name","scaleName","showGrid","showLine","showTicks","PureComponent","DIALOGFORM_OPEN","DIALOGFORM_CLOSE","dialogClose","payload","actionTypes","TABLEDATA_ROW_ADD","TABLEDATA_ROW_EDIT","TABLEDATA_ROW_REMOVE","tableDataRowAdd","tableDataRowEdit","connect","dialogForm","tableData","dispatch","dialogFormClose","firstName","lastName","age","fieldData","setFieldData","setInput","handleTextChange","field","obj","isNew","filter","el","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","fullWidth","defaultValue","DialogActions","length","columns","headerName","sortable","valueGetter","getValue","rows","boxBtn","boxTable","hidden","dialogFormOpen","dialogOpen","tableDataRowRemove","selected","setSelected","forEach","row","boxBtns","startIcon","Add","Edit","Delete","console","log","Object","values","pageSize","checkboxSelection","onSelectionChange","newSelection","rowIds","handleSelection","constStyles","drawerHeader","content","transition","transitions","create","easing","sharp","duration","leavingScreen","Dashboard","App","exact","get","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","allReducers","combineReducers","action","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","document","getElementById"],"mappings":"wYAIe,SAASA,EAAMC,GAC1B,OACI,cAACC,EAAA,EAAD,CAAUC,KAAMF,EAAME,KAAMC,iBAAkB,IAAMC,QAASJ,EAAMI,QAAnE,SACI,cAAC,IAAD,CACIC,UAAW,EACXC,QAAQ,SACRF,QAASJ,EAAMI,QACfG,SAAUP,EAAMO,SAJpB,SAMKP,EAAMQ,YCbvB,IAQeC,EARA,CACXC,mBAAoB,QACpBC,aAAc,QACdC,eAAgB,UAChBC,eAAgB,UAChBC,iBAAkB,wBCehBC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,mBACVC,OAAQ,QACRC,QAAS,IACTC,OAAQ,IAERC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAEhBC,MAAO,CACHL,QAAS,sBAETE,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAEhBE,MAAO,CACHC,aAAc,QAElBC,OAAQ,CACJC,UAAW,QAIfnB,aAAc,CACVoB,MAAOC,EAAerB,aACtBsB,WAAYD,EAAenB,gBAE/BD,eAAgB,CACZmB,MAAOC,EAAepB,eACtBqB,WAAYD,EAAelB,sBAIpB,SAASoB,IACpB,IAAMC,EAAUpB,IADY,EAEIqB,mBAAS,IAFb,mBAErBC,EAFqB,KAEXC,EAFW,OAGIF,mBAAS,IAHb,mBAGrBG,EAHqB,KAGXC,EAHW,OAIQJ,oBAAS,GAJjB,mBAIrBK,EAJqB,KAITC,EAJS,OAKMN,oBAAS,GALf,mBAKrBO,EALqB,KAKVC,EALU,OAMFR,mBAAS,CAAElC,MAAM,EAAOK,SAAU,GAAIC,QAAS,KAN7C,mBAMrBqC,EANqB,KAMdC,EANc,KA4C5B,OACI,eAACC,EAAA,EAAD,CAAWC,UAAWC,YAAKd,EAAQjB,KAAMiB,EAAQxB,cAAjD,UACI,cAACuC,EAAA,EAAD,CAAO7C,UAAW,EAAlB,SACI,cAAC8C,EAAA,EAAD,CAAKH,UAAWb,EAAQT,MAAxB,SACI,sBAAM0B,SAlCtB,SAAsBC,GAClBA,EAAEC,iBACFV,GAAa,GACb,IAAMW,EAAU,IAAIC,IAEpBC,YAAW,WACU,SAAbpB,GAAoC,MAAbE,GACvBO,EAAS,CAAE5C,MAAM,EAAMK,SAAU,UAAWC,QAAS,2BACrD+C,EAAQG,IAAI,QAAQ,EAAM,CAAEC,KAAM,IAAKC,QAAS,IAAIC,KAAKA,KAAKC,MAAQ,OACtEC,OAAOC,SAAW,UAElBlB,EAAS,CACL5C,MAAM,EACNK,SAAU,QACVC,QAAS,mCAEb8B,EAAY,IACZE,EAAY,IACZI,GAAa,MAElB,MAcS,SACI,eAACqB,EAAA,EAAD,CAAa3D,QAAQ,WAArB,UACI,cAAC4D,EAAA,EAAD,CACIlB,UAAWb,EAAQR,MACnBwC,UAAQ,EACRC,GAAG,WACHC,MAAM,WACN/D,QAAQ,WACRgE,MAAOjC,EACPkC,SAAU,SAAClB,GAAD,OAAOf,EAAYe,EAAEmB,OAAOF,QACtCG,WAAY,CACRC,aACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACI,cAACC,EAAA,EAAD,CAAe7B,UAAWb,EAAQvB,sBAKlD,cAACsD,EAAA,EAAD,CACIlB,UAAWb,EAAQR,MACnBwC,UAAQ,EACRC,GAAG,WACHC,MAAM,WACN/D,QAAQ,WACRgE,MAAO/B,EACPuC,KAAMrC,EAAa,WAAa,OAChC8B,SAAU,SAAClB,GAAD,OAAOb,EAAYa,EAAEmB,OAAOF,QACtCG,WAAY,CACRC,aACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACI,cAACG,EAAA,EAAD,CACI/B,UAAWb,EAAQvB,eACnBoE,aAAW,6BACXC,QAzE5C,WACIvC,GAAeD,IAyEyByC,YAvE5C,SAAiC7B,GAC7BA,EAAEC,kBAuEsC6B,KAAK,MALT,SAOK1C,EAAa,cAAC2C,EAAA,EAAD,IAAoB,cAACC,EAAA,EAAD,WAOtD,cAACC,EAAA,EAAD,CACItC,UAAWC,YAAKd,EAAQN,OAAQM,EAAQxB,cACxCL,QAAQ,YACRwE,KAAK,SACLS,KAAK,QACLC,SAAU7C,EALd,SAOKA,EACG,cAAC8C,EAAA,EAAD,CAAkBF,KAAM,GAAIG,MAAO,CAAE3D,MAAO,WAE5C,qBAQxB,cAAC,EAAD,CACI7B,KAAM2C,EAAM3C,KACZK,SAAUsC,EAAMtC,SAChBC,QAASqC,EAAMrC,QACfJ,QA9EZ,SAA0BuF,EAAOC,GACd,cAAXA,GAIJ9C,EAAS,2BAAKD,GAAN,IAAa3C,MAAM,WC9FpB,SAAS2F,IACpB,IAAMtC,EAAU,IAAIC,IAOpB,OALAsC,qBAAU,WACNvC,EAAQwC,OAAO,QACfhC,OAAOC,SAAW,YAGf,wB,kECFLjD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF8E,MAAO,QACP5E,OAAQ,SAEZ6E,cAAe,CACXrB,SAAU,WACVsB,IAAK,MACLC,UAAW,yBACXH,MAAO,QACPI,UAAW,UAEfC,KAAM,CACFC,eAAgB,OAChBvE,MAAOC,EAAerB,cAE1B4F,QAAS,CACLP,MAAO,MACPQ,WAAY,MACZ5E,aAAc,OACd6E,gBAAiBzE,EAAerB,cAEpC+F,UAAW,CACPV,MAAO,OACP5E,OAAQ,QAIZT,aAAc,CACVoB,MAAOC,EAAerB,aACtB8F,gBAAiBzE,EAAenB,oBAyCzB8F,MAnCf,WACI,IAAMxE,EAAUpB,IAChB,OACI,sBAAKiC,UAAWC,YAAKd,EAAQjB,KAAMiB,EAAQxB,cAA3C,UACI,cAAC,IAAD,CACIqC,UAAWb,EAAQuE,UACnBE,OAAQ,CACJF,UAAW,CACPG,OAAQ,CACJvC,MAAO,IAEXwC,MAAO,CACHhC,KAAM,cAKtB,eAAC3B,EAAA,EAAD,CAAKH,UAAWb,EAAQ8D,cAAxB,UACI,cAACc,EAAA,EAAD,CAAYzG,QAAQ,KAApB,SACI,cAAC,IAAD,CACI0G,QAAS,CAAC,eAAgB,aAC1BC,UAAW,GACXC,UAAW,GACXC,MAAI,MAGZ,cAACC,EAAA,EAAD,CAASpE,UAAWb,EAAQoE,UAC5B,cAAC,IAAD,CAAMvD,UAAWb,EAAQkE,KAAMgB,GAAG,aAAlC,SACI,cAACN,EAAA,EAAD,CAAYzG,QAAQ,KAApB,gC,uECjEdS,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCoF,KAAM,CACFC,eAAgB,QAIpB3F,aAAc,CACVoB,MAAOC,EAAerB,cAE1BC,eAAgB,CACZmB,MAAOC,EAAepB,eACtB6F,gBAAiBzE,EAAelB,kBAEpCD,eAAgB,CACZ4F,gBAAiBzE,EAAenB,oBAMzB,SAASyG,EAAWtH,GAC/B,IAAMmC,EAAUpB,IADsB,EAENqB,mBAAS,MAFH,mBAE/BmF,EAF+B,KAErBC,EAFqB,KAOhCC,EAAc,WAChBD,EAAY,OAGhB,OACI,gCACI,cAACzC,EAAA,EAAD,CACI2C,gBAAe1H,EAAMqE,MACrBsD,gBAAc,OACd1C,QAZQ,SAACU,GACjB6B,EAAY7B,EAAMiC,gBAYVlC,MAAO,CAAErE,QAAS,OAJtB,SAMI,cAACwG,EAAA,EAAD,CAAQ7E,UAAWb,EAAQxB,aAAc+E,MAAO,CAAEM,MAAO,OAAQ5E,OAAQ,QAAzE,iBAKJ,eAAC,IAAD,CACIgD,GAAIpE,EAAMqE,MACVkD,SAAUA,EACVO,aAAW,EACX5H,KAAM6H,QAAQR,GACdnH,QAASqH,EALb,UAOI,cAAC,IAAD,CACIzE,UAAWC,YAAKd,EAAQkE,KAAMlE,EAAQvB,gBACtCyG,GAAE,UAAKrH,EAAMgI,IAAX,SAFN,SAII,cAACC,EAAA,EAAD,CAAUhD,QAASwC,EAAnB,wBAGJ,cAAC,IAAD,CACIzE,UAAWC,YAAKd,EAAQkE,KAAMlE,EAAQvB,gBACtCyG,GAAE,UAAKrH,EAAMgI,IAAX,aAFN,SAII,cAACC,EAAA,EAAD,CAAUhD,QAASwC,EAAnB,yBAGJ,cAAC,IAAD,CAAMzE,UAAWC,YAAKd,EAAQkE,KAAMlE,EAAQvB,gBAAiByG,GAAE,UAA/D,SACI,cAACY,EAAA,EAAD,CAAUhD,QAASwC,EAAnB,6B,uBClEd1G,GAAYC,aAAW,SAACC,GAAD,MAAY,CAErCN,aAAc,CACVoB,MAAOC,EAAerB,cAE1BE,eAAgB,CACZ4F,gBAAiBzE,EAAenB,oBAMzB,SAASqH,GAAclI,GAClC,IAAMmC,EAAUpB,KADyB,EAETqB,mBAAS,MAFA,mBAElCmF,EAFkC,KAExBC,EAFwB,OAGXpF,mBAAS,GAHE,mBAGlC+F,EAHkC,KAGzBC,EAHyB,KASnCX,EAAc,WAChBD,EAAY,OAGhB,OACI,sBAAK9B,MAAO1F,EAAM0F,MAAOT,QAAWjF,EAAMiF,QAAUjF,EAAMiF,QAAU,KAApE,UACI,cAACF,EAAA,EAAD,CACI2C,gBAAc,gBACdC,gBAAc,OACd1C,QAbQ,SAACU,GACjB6B,EAAY7B,EAAMiC,eAClBQ,EAAW,IAYH1C,MAAO,CAAErE,QAAS,OAJtB,SAMI,cAACgH,EAAA,EAAD,CAAOC,aAAcH,EAASpG,MAAM,YAApC,SACI,cAACmG,GAAA,EAAD,CAAmBlF,UAAWb,EAAQxB,mBAI9C,cAAC,IAAD,CACIyD,GAAG,gBACHmD,SAAUA,EACVO,aAAW,EACX5H,KAAM6H,QAAQR,GACdnH,QAASqH,EALb,SAOK,CAAC,aAAc,aAAc,cAAcc,KAAI,SAACC,GAAD,OAC5C,eAACP,EAAA,EAAD,CAAUhD,QAASwC,EAAnB,UACI,cAACV,EAAA,EAAD,UAAayB,IAAmB,MADCA,WC1CzD,IAAMC,GAAczG,EAAetB,mBAC7BK,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFK,QAAS,QAEbmH,KAAM,CACFC,SAAU,GAEdC,OAAQ,CACJC,OAAQ5H,EAAM4H,OAAOC,OAAS,GAMlCC,YAAa,CACTvC,WAAYiC,GACZzC,MAAM,eAAD,OAAiByC,GAAjB,MAMTpC,KAAM,CACFC,eAAgB,QAEpB0C,QAAS,CACLxC,WAAY,QAIhB7F,aAAc,CACVoB,MAAOC,EAAerB,cAE1BE,eAAgB,CACZ4F,gBAAiBzE,EAAenB,oBAIzB,SAASoI,GAAOjJ,GAC3B,IAAMmC,EAAUpB,KACRiH,EAAQkB,cAARlB,IAER,OACI,cAACmB,EAAA,EAAD,CACIvE,SAAS,QACT5B,UAAWC,YAAKd,EAAQyG,OAAQzG,EAAQtB,eAAzB,eACVsB,EAAQ4G,cAAgB/I,EAAME,OAHvC,SAMI,eAACkJ,EAAA,EAAD,WACI,cAACrE,EAAA,EAAD,CACIhD,MAAM,UACNiD,aAAW,cACXC,QAASjF,EAAMqJ,mBACflE,KAAK,QAJT,SAMI,cAACmE,EAAA,EAAD,CAAUtG,UAAWb,EAAQxB,iBAGjC,cAACwC,EAAA,EAAD,CAAKH,UAAWb,EAAQ6G,QAAxB,SACI,cAACjC,EAAA,EAAD,CAAYzG,QAAQ,KAApB,SACI,cAAC,IAAD,CAAM0C,UAAWC,YAAKd,EAAQkE,KAAMlE,EAAQxB,cAAe0G,GAAG,IAA9D,sBAMR,qBAAKrE,UAAWb,EAAQuG,OAExB,cAAC,GAAD,CAAehD,MAAO,CAAE6D,YAAa,UACrC,cAACjC,EAAD,CAAYU,IAAKA,S,oFCnFlB,OAA0B,iCCoBnCwB,GAAW,CACb,CAAEnF,MAAO,WAAYgC,KAAM,YAC3B,CAAEhC,MAAO,QAASgC,KAAM,SACxB,CAAEhC,MAAO,YAAagC,KAAM,aAC5B,CAAEhC,MAAO,SAAUgC,KAAM,WAGvBoC,GAAczG,EAAetB,mBAC7BK,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC6H,OAAQ,CACJ9C,MAAOyC,GACPgB,WAAY,EACZC,WAAY,UAEhBC,WAAY,CACR3D,MAAOyC,IAMXmB,YAAY,aAKRC,UAAW,SACX7D,MAAO/E,EAAM6I,QAAQ,GAAK,GACzB7I,EAAM8I,YAAYC,GAAG,MAAQ,CAC1BhE,MAAO/E,EAAM6I,QAAQ,GAAK,IAGlCpI,MAAO,CACHN,OAAQ,QAEZ6I,QAAQ,aACJ1I,QAAS,OACTE,WAAY,SACZD,eAAgB,aAChBH,QAASJ,EAAM6I,QAAQ,EAAG,IAEvB7I,EAAMiJ,OAAOD,SAEpBE,KAAM,CACF/I,OAAQ,OACR4E,MAAO,QAEXoE,QAAS,CACLhJ,OAAQ,OACR4E,MAAO,QAEXK,KAAM,CACFC,eAAgB,QAIpB3F,aAAc,CACVoB,MAAOC,EAAepB,gBAE1BC,eAAgB,CACZoB,WAAYD,EAAelB,sBAMpB,SAASuJ,GAAQrK,GAAQ,IAAD,IAC7BmC,EAAUpB,KADmB,EAGbmI,cAARlB,GAHqB,EAG3BrE,KAH2B,EAGrBqE,KAEd,OACI,cAACsC,GAAA,EAAD,CACIhK,QAAQ,YACR0C,UAAWC,YAAKd,EAAQ2G,OAAQ3G,EAAQtB,gBAAzB,mBACVsB,EAAQwH,WAAa3J,EAAME,MADjB,cAEViC,EAAQyH,aAAe5J,EAAME,MAFnB,IAIfiC,QAAS,CACLT,MAAOuB,aAAI,mBACNd,EAAQwH,WAAa3J,EAAME,MADrB,cAENiC,EAAQyH,aAAe5J,EAAME,MAFvB,KAPnB,SAaI,eAACgD,EAAA,EAAD,CAAOF,UAAWC,YAAKd,EAAQT,MAAOS,EAAQtB,gBAA9C,UACI,sBAAKmC,UAAWb,EAAQ8H,QAAxB,UACI,cAACM,GAAA,EAAD,CAAMvH,UAAWC,YAAKd,EAAQgI,KAAMhI,EAAQxB,cAA5C,SACI,qBAAKqC,UAAWb,EAAQiI,QAASI,IAAKC,GAASC,IAAI,WAEvD,cAAC3D,EAAA,EAAD,CAAY/D,UAAWC,YAAKd,EAAQxB,cAAeL,QAAQ,KAAKqK,QAAM,EAAtE,0BAKJ,cAACvD,EAAA,EAAD,IACA,cAACwD,GAAA,EAAD,UACKpB,GAASjB,KAAI,SAACC,EAAMqC,GAAP,OACV,cAAC,IAAD,CACI7H,UAAWC,YAAKd,EAAQkE,KAAMlE,EAAQxB,cACtC0G,GAAE,UAAKW,EAAL,YAAYQ,EAAKnC,MAFvB,SAKI,eAACyE,GAAA,EAAD,CAAUjJ,QAAM,EAAhB,UACI,cAACkJ,GAAA,EAAD,CAAc/H,UAAWb,EAAQxB,aAAjC,SACKkK,EAAQ,IAAM,EAAI,cAAC,KAAD,IAAgB,cAACG,GAAA,EAAD,MAEvC,cAACC,GAAA,EAAD,CAAcC,QAAS1C,EAAKnE,UAJVmE,EAAKnE,QAFtBmE,EAAKnE,YAWtB,cAAC+C,EAAA,EAAD,SC7HhB,IAAMrG,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFK,QAAS,QAEb4J,KAAM,CACF5J,QAAS,QAIbZ,aAAc,CACVoB,MAAO,SAEXlB,eAAgB,CACZ4F,gBAAiB,eAIV,SAAS2E,KACpB,IAAMjJ,EAAUpB,KADa,EAELsK,IAAMjJ,UAAS,GAFV,mBAEtBlC,EAFsB,KAEhBoL,EAFgB,KAQ7B,OACI,sBAAKtI,UAAWb,EAAQjB,KAAxB,UACI,cAACqK,EAAA,EAAD,IAEA,cAACtC,GAAD,CAAQ/I,KAAMA,EAAMmJ,mBARD,WACvBiC,GAASpL,MASL,cAACmK,GAAD,CAASnK,KAAMA,O,aClCrBsL,GAAO,CACT,CAAEC,SAAU,EAAGnH,MAAO,IACtB,CAAEmH,SAAU,EAAGnH,MAAO,IACtB,CAAEmH,SAAU,EAAGnH,MAAO,KAgBXoH,OAbf,WACI,OACI,cAACxI,EAAA,EAAD,UACI,eAAC,KAAD,CAAOsI,KAAMA,GAAb,UACI,cAAC,KAAD,IACA,cAAC,KAAD,IAEA,cAAC,KAAD,CAAYG,WAAW,QAAQC,cAAc,mB,+CCJxCC,G,oDACjB,WAAY7L,GAAQ,IAAD,+BACf,cAAMA,IAED8L,MAAQ,CACTN,KAAM,CACF,CAAEO,MAAO,MAAOC,KAAM,GAAIC,MAAO,KACjC,CAAEF,MAAO,MAAOC,KAAM,IAAKC,MAAO,KAClC,CAAEF,MAAO,QAASC,KAAM,GAAIC,MAAO,MACnC,CAAEF,MAAO,QAASC,KAAM,IAAKC,MAAO,MACpC,CAAEF,MAAO,MAAOC,KAAM,GAAIC,MAAO,MACjC,CAAEF,MAAO,OAAQC,KAAM,IAAKC,MAAO,QAV5B,E,sDAeT,IACQC,EAAcC,KAAKL,MAAzBN,KAER,OACI,cAACtI,EAAA,EAAD,UACI,eAAC,KAAD,CAAOsI,KAAMU,EAAb,UACI,cAAC,KAAD,CAAYE,KAAK,SACjB,cAAC,KAAD,CAAYA,KAAK,UAEjB,cAAC,KAAD,IACA,cAAC,KAAD,CAAWC,UAAU,OAAOC,UAAU,EAAOC,UAAQ,EAACC,WAAS,IAC/D,cAAC,KAAD,CACIH,UAAU,QACVzH,SAAS,QACT0H,UAAU,EACVC,UAAQ,EACRC,WAAS,IAGb,cAAC,KAAD,CACIJ,KAAK,aACLT,WAAW,OACXC,cAAc,QACdS,UAAU,SAGd,cAAC,KAAD,CACID,KAAK,qBACLT,WAAW,QACXC,cAAc,QACdS,UAAU,UAGd,cAAC,KAAD,a,GAjDchB,IAAMoB,e,iDCb3BC,GAAkB,cAClBC,GAAmB,eCWnBC,GAAc,SAACC,GACxB,MAAO,CACH/H,KAAMgI,GACND,QAAS,CACL3M,MAAM,KChBL6M,GAAoB,iBACpBC,GAAqB,kBACrBC,GAAuB,oBCAvBC,GAAkB,SAACL,GAC5B,MAAO,CACH/H,KAAMgI,GACND,YAIKM,GAAmB,SAAAN,GAC5B,MAAO,CACH/H,KAAMgI,GACND,Y,2DC8FR,IASeO,iBATS,SAACtB,GAAD,MAAY,CAChCuB,WAAW,eAAMvB,EAAMuB,YACvBC,UAAU,aAAKxB,EAAMwB,eAEE,SAACC,GAAD,MAAe,CACtCC,gBAAiB,SAACX,GAAD,OAAaU,EAASX,OACvCM,gBAAiB,SAACL,GAAD,OAAaU,EAASL,GAAgBL,KACvDM,iBAAkB,SAACN,GAAD,OAAaU,EAASJ,GAAiBN,QAE9CO,EApGf,SAAoBpN,GAAQ,IAAD,EACWoC,mBAAS,CACvCgC,GAAI,KACJqJ,UAAW,KACXC,SAAU,KACVC,IAAK,OALc,mBAChBC,EADgB,KACLC,EADK,OAOGzL,mBAAS,CAAEqL,UAAW,KAAMC,SAAU,KAAMC,IAAK,OAPpD,mBAOhBhM,EAPgB,KAOTmM,EAPS,KAsBvB,SAASrG,IACLzH,EAAMwN,kBASV,SAASO,EAAiBC,GACtB,OAAO,SAAU3K,GACb,IAAM4K,EAAG,eAAQtM,GACjBsM,EAAID,GAAS3K,EAAEmB,OAAOF,MACtBwJ,EAASG,IAIjB,OA/BAnI,qBAAU,WACN,IAAI9F,EAAMqN,WAAWa,OAEVlO,EAAMqN,WAAWjJ,GAAI,CAAC,IAAD,EACapE,EAAMsN,UAAUa,QACrD,SAACC,GAAD,OAAQA,EAAGhK,KAAOpE,EAAMqN,WAAWjJ,MACrC,GAFMA,EADoB,EACpBA,GAAIqJ,EADgB,EAChBA,UAAWC,EADK,EACLA,SAAUC,EADL,EACKA,IAGjCE,EAAa,CAAEzJ,KAAIqJ,YAAWC,WAAUC,QACxCG,EAAS,CAAEL,YAAWC,WAAUC,WAGrC,CAAC3N,EAAMqN,aAqBN,8BACI,eAACgB,GAAA,EAAD,CACInO,OAAQF,EAAMqN,WAAWnN,KACzBE,QAASqH,EACT6G,kBAAgB,oBAHpB,UAKI,cAACC,GAAA,EAAD,CAAanK,GAAG,oBAAhB,kBACA,eAACoK,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,kDACA,cAACvK,EAAA,EAAD,CACIwK,WAAS,EACTpN,OAAO,QACP8C,GAAG,YACHC,MAAM,WACNsK,WAAS,EACTC,aAAchB,EAAUH,UACxBlJ,SAAUwJ,EAAiB,eAE/B,cAAC7J,EAAA,EAAD,CACI5C,OAAO,QACP8C,GAAG,WACHC,MAAM,WACNsK,WAAS,EACTC,aAAchB,EAAUF,SACxBnJ,SAAUwJ,EAAiB,cAE/B,cAAC7J,EAAA,EAAD,CACI5C,OAAO,QACP8C,GAAG,MACHC,MAAM,WACNS,KAAK,SACL6J,WAAS,EACTC,aAAchB,EAAUD,IACxBpJ,SAAUwJ,EAAiB,YAGnC,eAACc,GAAA,EAAD,WACI,cAACvJ,EAAA,EAAD,CAAQL,QAASwC,EAAa1F,MAAM,UAApC,oBAGA,cAACuD,EAAA,EAAD,CAAQL,QAxDxB,SAAsB5B,GACdrD,EAAMqN,WAAWa,MACjBlO,EAAMkN,gBAAN,aAAwB9I,GAAIpE,EAAMsN,UAAUwB,OAAS,GAAMnN,IAC1D3B,EAAMmN,iBAAN,aAAyB/I,GAAIwJ,EAAUxJ,IAAOzC,IAEnD8F,KAmD2C1F,MAAM,UAArC,kCC/EdgN,GAAU,CACZ,CAAEf,MAAO,KAAMgB,WAAY,KAAMhJ,MAAO,IACxC,CAAEgI,MAAO,YAAagB,WAAY,aAAchJ,MAAO,KACvD,CAAEgI,MAAO,WAAYgB,WAAY,YAAahJ,MAAO,KACrD,CAAEgI,MAAO,MAAOgB,WAAY,MAAOlK,KAAM,SAAUkB,MAAO,IAC1D,CACIgI,MAAO,WACPgB,WAAY,YACZC,UAAU,EACVjJ,MAAO,IACPkJ,YAAa,SAACtI,GAAD,gBACNA,EAAOuI,SAAS,cAAgB,GAD1B,YACgCvI,EAAOuI,SAAS,aAAe,OAI9EC,GAAO,CACT,CAAEhL,GAAI,EAAGsJ,SAAU,OAAQD,UAAW,MAAOE,IAAK,IAClD,CAAEvJ,GAAI,EAAGsJ,SAAU,YAAaD,UAAW,SAAUE,IAAK,IAC1D,CAAEvJ,GAAI,EAAGsJ,SAAU,YAAaD,UAAW,QAASE,IAAK,IACzD,CAAEvJ,GAAI,EAAGsJ,SAAU,QAASD,UAAW,OAAQE,IAAK,IACpD,CAAEvJ,GAAI,EAAGsJ,SAAU,YAAaD,UAAW,WAAYE,IAAK,MAC5D,CAAEvJ,GAAI,EAAGsJ,SAAU,aAAcD,UAAW,KAAME,IAAK,KACvD,CAAEvJ,GAAI,EAAGsJ,SAAU,WAAYD,UAAW,UAAWE,IAAK,IAC1D,CAAEvJ,GAAI,EAAGsJ,SAAU,UAAWD,UAAW,UAAWE,IAAK,IACzD,CAAEvJ,GAAI,EAAGsJ,SAAU,QAASD,UAAW,SAAUE,IAAK,IACtD,CAAEvJ,GAAI,GAAIsJ,SAAU,QAASD,UAAW,QAASE,IAAK,KAIpD5M,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCoO,OAAQ,CACJ9F,YAAa,OAEjB+F,SAAU,CACNlO,OAAQ,IACR4E,MAAO,OACPlE,UAAW,QAEfyN,OAAQ,CACJhO,QAAS,QAIbZ,aAAc,CACVoB,MAAOC,EAAerB,aACtB8F,gBAAiBzE,EAAenB,oBA0FxC,IAWeuM,iBAXS,SAACtB,GAAD,MAAY,CAChCuB,WAAW,eAAMvB,EAAMuB,YACvBC,UAAU,eAAMxB,EAAMwB,eAEC,SAACC,GAAD,MAAe,CACtCiC,eAAgB,SAAC3C,GAAD,OAAaU,EJ3JP,SAACV,GACvB,MAAO,CACH/H,KAAMgI,GACND,QAAQ,aACJ3M,MAAM,GACH2M,IIsJ2B4C,CAAW5C,KACjDW,gBAAiB,SAACX,GAAD,OAAaU,EAASX,OACvCM,gBAAiB,SAACL,GAAD,OAAaU,EAASL,GAAgBL,KACvDM,iBAAkB,SAACN,GAAD,OAAaU,EAASJ,GAAiBN,KACzD6C,mBAAoB,SAAC7C,GAAD,OAAaU,EFjJH,SAACV,GAC/B,MAAO,CACH/H,KAAMgI,GACND,WE8IsC6C,CAAmB7C,QAElDO,EA/Ff,SAAmBpN,GAEf,IAAMmC,EAAUpB,KAFM,EAGUqB,mBAAS,IAHnB,mBAGfuN,EAHe,KAGLC,EAHK,KAmCtB,OA9BA9J,qBAAU,WACN9F,EAAMwN,kBAEN4B,GAAKS,SAAQ,SAACC,GACV9P,EAAMkN,gBAAgB4C,QAG3B,CAAC,IAwBA,qCACI,eAAC3M,EAAA,EAAD,CAAKH,UAAWb,EAAQ4N,QAAxB,UACI,cAACzK,EAAA,EAAD,CACIhF,QAAQ,YACRyB,MAAM,UACNiB,UAAWC,YAAKd,EAAQkN,QACxBW,UAAW,cAACC,GAAA,EAAD,IACXhL,QAxBhB,WACIjF,EAAMwP,eAAe,CAAEtB,OAAO,KAkBtB,iBASA,cAAC5I,EAAA,EAAD,CACIhF,QAAQ,YACR0C,UAAWC,YAAKd,EAAQkN,OAAQ,CAAqB,IAApBM,EAASb,QAAgB3M,EAAQoN,SAClES,UAAW,cAACE,GAAA,EAAD,IACXjL,QA7BhB,WACIjF,EAAMwP,eAAe,CAAEpL,GAAkB,EAAduL,EAAS,MAwB5B,kBAQA,cAACrK,EAAA,EAAD,CACIhF,QAAQ,YACRyB,MAAM,YACNiB,UAAWC,YAAKd,EAAQkN,OAAQ,CAACM,EAASb,OAAS,GAAK3M,EAAQoN,SAChES,UAAW,cAACG,GAAA,EAAD,IACXlL,QAnChB,WACImL,QAAQC,IAAIV,GACZA,EAASE,SAAQ,SAACzL,GACdpE,EAAM0P,mBAAmB,CAAEtL,GAAS,EAALA,OAGnCwL,EAAY,KAwBJ,uBAWJ,cAAC,GAAD,IAEA,cAACzM,EAAA,EAAD,CAAKH,UAAWb,EAAQmN,SAAxB,SACI,cAAC,KAAD,CACIF,KAAMkB,OAAOC,OAAOvQ,EAAMsN,WAC1ByB,QAASA,GACTyB,SAAU,GACVC,mBAAiB,EACjBC,kBAAmB,SAACC,IA3DpC,SAAyBA,GACrBf,EAAYe,EAAaC,QA2DTC,CAAgBF,cCnIlClI,GAAcqI,EAAYpQ,mBAC1BK,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFK,QAAS,QAEbwP,aAAa,yBACTxP,QAAS,OACTE,WAAY,SACZJ,QAASJ,EAAM6I,QAAQ,EAAG,IAEvB7I,EAAMiJ,OAAOD,SALR,IAMRzI,eAAgB,aAEpBwP,QAAS,CACLrI,SAAU,EACVtH,QAASJ,EAAM6I,QAAQ,GACvBmH,WAAYhQ,EAAMiQ,YAAYC,OAAO,SAAU,CAC3CC,OAAQnQ,EAAMiQ,YAAYE,OAAOC,MACjCC,SAAUrQ,EAAMiQ,YAAYI,SAASC,gBAEzC/K,YAAaiC,QA+BN+I,OAzBf,WACI,IAAMrP,EAAUpB,KACR4C,EAASuF,cAATvF,KAER,OACI,sBAAKX,UAAWb,EAAQjB,KAAxB,UACI,cAACkK,GAAD,IACA,uBAAMpI,UAAWC,YAAKd,EAAQ6O,QAAS,IAAvC,UACI,qBAAKhO,UAAWb,EAAQ4O,eACxB,eAAC,IAAD,WACI,cAAC,IAAD,CAAOpN,KAAI,UAAKA,EAAL,aAAX,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,UAAX,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,cAAX,SACI,cAAC,GAAD,gBCbT8N,OAjCf,WACI,IAAMlO,EAAU,IAAIC,IAEpB,OACI,qBAAKR,UAAU,MAAf,SACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAO0O,OAAK,EAAC/N,KAAK,SAAlB,UACKJ,EAAQoO,IAAI,SAAW,cAAC,IAAD,CAAUtK,GAAG,MACrC,cAACnF,EAAD,QAGFqB,EAAQoO,IAAI,SAAW,cAAC,IAAD,CAAUtK,GAAG,WACtC,cAAC,IAAD,CAAOqK,OAAK,EAAC/N,KAAK,IAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACI,cAAC,GAAD,MAGJ,cAAC,IAAD,CAAO+N,OAAK,EAAC/N,KAAK,UAAlB,SACI,cAACkC,EAAD,MAEJ,cAAC,IAAD,CAAOlC,KAAK,IAAZ,SACI,cAAC,IAAD,CAAU0D,GAAG,gBCrBtBuK,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,SCHd,IAKeQ,GALKC,aAAgB,CAChCjF,WCHW,WAA4C,IAArBvB,EAAoB,uDAAZ,GAAIyG,EAAQ,uCACtD,OAAQA,EAAOzN,MACX,KAAKgI,GACD,OAAQyF,EAAO1F,QAEnB,KAAKC,GACD,MAAO,CAAE5M,KAAMqS,EAAO1F,QAAQ3M,MAElC,QACI,OAAO4L,IDLfwB,UEJW,WAA+C,IAArBxB,EAAoB,uDAAZ,GAAIyG,EAAQ,uCACzD,OAAQA,EAAOzN,MACX,KAAKgI,GACD,MAAM,GAAN,oBAAWhB,GAAX,CAAkByG,EAAO1F,UAE7B,KAAKC,GACD,OAAOhB,EAAMvD,KAAI,SAAC6F,GACd,OAAIA,EAAGhK,KAAOmO,EAAO1F,QAAQzI,GAClBmO,EAAO1F,QAEXuB,KAIf,KAAKtB,GACD,OAAOhB,EAAMqC,QAAO,SAACC,GAAD,OAAQA,EAAGhK,KAAOmO,EAAO1F,QAAQzI,MAEzD,QACI,OAAO,aAAI0H,OCjBR0G,gBACXH,GACA,GACAtO,OAAO0O,8BAAgC1O,OAAO0O,gCCClDC,IAASC,OAEL,cAAC,KAAD,CAAUC,MAAOA,GAAjB,SACI,cAAC,GAAD,MAGJC,SAASC,eAAe,SAM5BlB,O","file":"static/js/main.d3641227.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        <Snackbar open={props.open} autoHideDuration={6000} onClose={props.onClose}>\r\n            <MuiAlert\r\n                elevation={6}\r\n                variant=\"filled\"\r\n                onClose={props.onClose}\r\n                severity={props.severity}\r\n            >\r\n                {props.message}\r\n            </MuiAlert>\r\n        </Snackbar>\r\n    );\r\n}\r\n","const VALUES = {\r\n    sideBarWidthExpand: '220px',\r\n    colorPrimary: 'white',\r\n    colorSecondary: '#263055',\r\n    colorBgPrimary: '#3D4977',\r\n    colorBgSecondary: 'rgba(255,255,255,1) ',\r\n};\r\n\r\nexport default VALUES;\r\n","import React, { useState } from 'react';\r\nimport {\r\n    Container,\r\n    FormControl,\r\n    TextField,\r\n    InputAdornment,\r\n    IconButton,\r\n    Button,\r\n    CircularProgress,\r\n    Paper,\r\n    Box,\r\n} from '@material-ui/core';\r\nimport { AccountCircle, Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport clsx from 'clsx';\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport Alert from '../../components/Alert';\r\nimport styleConstants from '../../constants/styleConstants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: '100vw !important',\r\n        height: '100vh',\r\n        padding: '0',\r\n        margin: '0',\r\n\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    paper: {\r\n        padding: '40px 40px 80px 40px',\r\n\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    input: {\r\n        marginBottom: '10px',\r\n    },\r\n    button: {\r\n        marginTop: '20px',\r\n    },\r\n\r\n    //\r\n    colorPrimary: {\r\n        color: styleConstants.colorPrimary,\r\n        background: styleConstants.colorBgPrimary,\r\n    },\r\n    colorSecondary: {\r\n        color: styleConstants.colorSecondary,\r\n        background: styleConstants.colorBgSecondary,\r\n    },\r\n}));\r\n\r\nexport default function Login() {\r\n    const classes = useStyles();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passHidden, setPassHidden] = useState(true);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [alert, setAlert] = useState({ open: false, severity: '', message: '' });\r\n\r\n    function handleClickShowPassword() {\r\n        setPassHidden(!passHidden);\r\n    }\r\n    function handleMouseDownPassword(e) {\r\n        e.preventDefault();\r\n    }\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n        const cookies = new Cookies();\r\n\r\n        setTimeout(() => {\r\n            if (username === 'user' && password === '1') {\r\n                setAlert({ open: true, severity: 'success', message: 'Successfully Signed In' });\r\n                cookies.set('auth', true, { path: '/', expires: new Date(Date.now() + 100000) });\r\n                window.location = '/home';\r\n            } else {\r\n                setAlert({\r\n                    open: true,\r\n                    severity: 'error',\r\n                    message: 'Incorrect username or password',\r\n                });\r\n                setUsername('');\r\n                setPassword('');\r\n                setSubmitted(false);\r\n            }\r\n        }, 700);\r\n    }\r\n    function handleAlertClose(event, reason) {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setAlert({ ...alert, open: false });\r\n    }\r\n\r\n    return (\r\n        <Container className={clsx(classes.root, classes.colorPrimary)}>\r\n            <Paper elevation={3}>\r\n                <Box className={classes.paper}>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <FormControl variant=\"outlined\">\r\n                            <TextField\r\n                                className={classes.input}\r\n                                required\r\n                                id=\"username\"\r\n                                label=\"Username\"\r\n                                variant=\"outlined\"\r\n                                value={username}\r\n                                onChange={(e) => setUsername(e.target.value)}\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <AccountCircle className={classes.colorSecondary} />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                className={classes.input}\r\n                                required\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                variant=\"outlined\"\r\n                                value={password}\r\n                                type={passHidden ? 'password' : 'text'}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                className={classes.colorSecondary}\r\n                                                aria-label=\"toggle password visibility\"\r\n                                                onClick={handleClickShowPassword}\r\n                                                onMouseDown={handleMouseDownPassword}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                {passHidden ? <VisibilityOff /> : <Visibility />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n\r\n                            <Button\r\n                                className={clsx(classes.button, classes.colorPrimary)}\r\n                                variant=\"contained\"\r\n                                type=\"submit\"\r\n                                size=\"large\"\r\n                                disabled={submitted}\r\n                            >\r\n                                {submitted ? (\r\n                                    <CircularProgress size={28} style={{ color: 'white' }} />\r\n                                ) : (\r\n                                    'Sign In'\r\n                                )}\r\n                            </Button>\r\n                        </FormControl>\r\n                    </form>\r\n                </Box>\r\n            </Paper>\r\n\r\n            <Alert\r\n                open={alert.open}\r\n                severity={alert.severity}\r\n                message={alert.message}\r\n                onClose={handleAlertClose}\r\n            />\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport Cookies from 'universal-cookie';\r\n\r\nexport default function Logout() {\r\n    const cookies = new Cookies();\r\n\r\n    useEffect(() => {\r\n        cookies.remove('auth');\r\n        window.location = '/login';\r\n    });\r\n\r\n    return <div></div>;\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Typography, Box, Divider, makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport Typed from 'react-typed';\r\nimport Particles from 'react-particles-js';\r\nimport styleConstants from '../../constants/styleConstants';\r\n\r\n//\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100vw',\r\n        height: '100vh',\r\n    },\r\n    textContainer: {\r\n        position: 'absolute',\r\n        top: '30%',\r\n        transform: 'translate(-50%, - 50%)',\r\n        width: '100vw',\r\n        textAlign: 'center',\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: styleConstants.colorPrimary,\r\n    },\r\n    divider: {\r\n        width: '50%',\r\n        marginLeft: '25%',\r\n        marginBottom: '10px',\r\n        backgroundColor: styleConstants.colorPrimary,\r\n    },\r\n    particles: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n\r\n    // Customization\r\n    colorPrimary: {\r\n        color: styleConstants.colorPrimary,\r\n        backgroundColor: styleConstants.colorBgPrimary,\r\n    },\r\n}));\r\n\r\n//\r\n\r\nfunction Home() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={clsx(classes.root, classes.colorPrimary)}>\r\n            <Particles\r\n                className={classes.particles}\r\n                params={{\r\n                    particles: {\r\n                        number: {\r\n                            value: 65,\r\n                        },\r\n                        shape: {\r\n                            type: 'circle',\r\n                        },\r\n                    },\r\n                }}\r\n            />\r\n            <Box className={classes.textContainer}>\r\n                <Typography variant=\"h3\">\r\n                    <Typed\r\n                        strings={['Your Company', 'Home Page']}\r\n                        typeSpeed={80}\r\n                        backSpeed={30}\r\n                        loop\r\n                    />\r\n                </Typography>\r\n                <Divider className={classes.divider} />\r\n                <Link className={classes.link} to=\"/dashboard\">\r\n                    <Typography variant=\"h4\">Dashboard</Typography>\r\n                </Link>\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IconButton, Avatar, Menu, MenuItem, makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nimport styleConstants from '../../../constants/styleConstants';\r\n\r\n//\r\nconst useStyles = makeStyles((theme) => ({\r\n    link: {\r\n        textDecoration: 'none',\r\n    },\r\n\r\n    // CUSTOMIZATION\r\n    colorPrimary: {\r\n        color: styleConstants.colorPrimary,\r\n    },\r\n    colorSecondary: {\r\n        color: styleConstants.colorSecondary,\r\n        backgroundColor: styleConstants.colorBgSecondary,\r\n    },\r\n    colorBgPrimary: {\r\n        backgroundColor: styleConstants.colorBgPrimary,\r\n    },\r\n}));\r\n\r\n//\r\n\r\nexport default function UserAvatar(props) {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <IconButton\r\n                aria-controls={props.label}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n                style={{ padding: '2px' }}\r\n            >\r\n                <Avatar className={classes.colorPrimary} style={{ width: '30px', height: '30px' }}>\r\n                    H\r\n                </Avatar>\r\n            </IconButton>\r\n\r\n            <Menu\r\n                id={props.label}\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <Link\r\n                    className={clsx(classes.link, classes.colorSecondary)}\r\n                    to={`${props.url}/user`}\r\n                >\r\n                    <MenuItem onClick={handleClose}>Profile </MenuItem>\r\n                </Link>\r\n\r\n                <Link\r\n                    className={clsx(classes.link, classes.colorSecondary)}\r\n                    to={`${props.url}/settings`}\r\n                >\r\n                    <MenuItem onClick={handleClose}>Settings </MenuItem>\r\n                </Link>\r\n\r\n                <Link className={clsx(classes.link, classes.colorSecondary)} to={`/logout`}>\r\n                    <MenuItem onClick={handleClose}>Logout </MenuItem>\r\n                </Link>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { IconButton, Menu, MenuItem, Badge, makeStyles, Typography } from '@material-ui/core';\r\nimport { Notifications as NotificationsIcon } from '@material-ui/icons';\r\n\r\nimport styleConstants from '../../../constants/styleConstants';\r\n\r\n//\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // CUSTOMIZATION\r\n    colorPrimary: {\r\n        color: styleConstants.colorPrimary,\r\n    },\r\n    colorBgPrimary: {\r\n        backgroundColor: styleConstants.colorBgPrimary,\r\n    },\r\n}));\r\n\r\n//\r\n\r\nexport default function Notifications(props) {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [counter, setCounter] = useState(3);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n        setCounter(0);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div style={props.style} onClick={!!props.onClick ? props.onClick : null}>\r\n            <IconButton\r\n                aria-controls=\"notifications\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n                style={{ padding: '2px' }}\r\n            >\r\n                <Badge badgeContent={counter} color=\"secondary\">\r\n                    <NotificationsIcon className={classes.colorPrimary} />\r\n                </Badge>\r\n            </IconButton>\r\n\r\n            <Menu\r\n                id=\"notifications\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                {['update v.1', 'update v.2', 'update v.3'].map((item) => (\r\n                    <MenuItem onClick={handleClose} key={item}>\r\n                        <Typography>{item}</Typography>{' '}\r\n                    </MenuItem>\r\n                ))}\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport { AppBar, Toolbar, IconButton, makeStyles, Typography, Box } from '@material-ui/core';\r\nimport { Menu as MenuIcon } from '@material-ui/icons';\r\nimport clsx from 'clsx';\r\n\r\nimport UserAvatar from './UserAvatar';\r\nimport Notifications from './Notifications';\r\nimport styleConstants from '../../../constants/styleConstants';\r\n\r\n//\r\n\r\nconst drawerWidth = styleConstants.sideBarWidthExpand;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        // transition: theme.transitions.create(['width', 'margin'], {\r\n        //     easing: theme.transitions.easing.sharp,\r\n        //     duration: theme.transitions.duration.leavingScreen,\r\n        // }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth})`,\r\n        // transition: theme.transitions.create(['width', 'margin'], {\r\n        //     easing: theme.transitions.easing.sharp,\r\n        //     duration: theme.transitions.duration.enteringScreen,\r\n        // }),\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n    },\r\n    menuBox: {\r\n        marginLeft: '30px',\r\n    },\r\n\r\n    // CUSTOMIZATION\r\n    colorPrimary: {\r\n        color: styleConstants.colorPrimary,\r\n    },\r\n    colorBgPrimary: {\r\n        backgroundColor: styleConstants.colorBgPrimary,\r\n    },\r\n}));\r\n\r\nexport default function Header(props) {\r\n    const classes = useStyles();\r\n    const { url } = useRouteMatch();\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"fixed\"\r\n            className={clsx(classes.appBar, classes.colorBgPrimary, {\r\n                [classes.appBarShift]: !!props.open,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={props.handleDrawerToggle}\r\n                    edge=\"start\"\r\n                >\r\n                    <MenuIcon className={classes.colorPrimary} />\r\n                </IconButton>\r\n\r\n                <Box className={classes.menuBox}>\r\n                    <Typography variant=\"h6\">\r\n                        <Link className={clsx(classes.link, classes.colorPrimary)} to=\"/\">\r\n                            Home\r\n                        </Link>\r\n                    </Typography>\r\n                </Box>\r\n\r\n                <div className={classes.grow} />\r\n\r\n                <Notifications style={{ marginRight: '10px' }} />\r\n                <UserAvatar url={url} />\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport {\r\n    Drawer,\r\n    List,\r\n    Typography,\r\n    Divider,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Icon,\r\n    Paper,\r\n    makeStyles,\r\n} from '@material-ui/core';\r\nimport { MoveToInbox as InboxIcon, Mail as MailIcon } from '@material-ui/icons';\r\nimport logoSvg from '../../../assets/images/logo.svg';\r\nimport styleConstants from '../../../constants/styleConstants';\r\n\r\n//\r\nconst menuList = [\r\n    { label: 'Overview', link: 'overview' },\r\n    { label: 'Sales', link: 'sales' },\r\n    { label: 'Analytics', link: 'analytics' },\r\n    { label: 'Drafts', link: 'drafts' },\r\n];\r\n\r\nconst drawerWidth = styleConstants.sideBarWidthExpand;\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        // transition: theme.transitions.create('width', {\r\n        //     easing: theme.transitions.easing.sharp,\r\n        //     duration: theme.transitions.duration.enteringScreen,\r\n        // }),\r\n    },\r\n    drawerClose: {\r\n        // transition: theme.transitions.create('width', {\r\n        //     easing: theme.transitions.easing.sharp,\r\n        //     duration: theme.transitions.duration.leavingScreen,\r\n        // }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    paper: {\r\n        height: '100%',\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    icon: {\r\n        height: '35px',\r\n        width: '35px',\r\n    },\r\n    logoImg: {\r\n        height: '100%',\r\n        width: '100%',\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n    },\r\n\r\n    // CUSTOMIZATION\r\n    colorPrimary: {\r\n        color: styleConstants.colorSecondary,\r\n    },\r\n    colorBgPrimary: {\r\n        background: styleConstants.colorBgSecondary,\r\n    },\r\n}));\r\n\r\n//\r\n\r\nexport default function Sidebar(props) {\r\n    const classes = useStyles();\r\n    // eslint-disable-next-line no-unused-vars\r\n    const { path, url } = useRouteMatch();\r\n\r\n    return (\r\n        <Drawer\r\n            variant=\"permanent\"\r\n            className={clsx(classes.drawer, classes.colorBgPrimary, {\r\n                [classes.drawerOpen]: props.open,\r\n                [classes.drawerClose]: !props.open,\r\n            })}\r\n            classes={{\r\n                paper: clsx({\r\n                    [classes.drawerOpen]: props.open,\r\n                    [classes.drawerClose]: !props.open,\r\n                }),\r\n            }}\r\n        >\r\n            <Paper className={clsx(classes.paper, classes.colorBgPrimary)}>\r\n                <div className={classes.toolbar}>\r\n                    <Icon className={clsx(classes.icon, classes.colorPrimary)}>\r\n                        <img className={classes.logoImg} src={logoSvg} alt=\"logo\" />\r\n                    </Icon>\r\n                    <Typography className={clsx(classes.colorPrimary)} variant=\"h6\" noWrap>\r\n                        Dashboard\r\n                    </Typography>\r\n                </div>\r\n\r\n                <Divider />\r\n                <List>\r\n                    {menuList.map((item, index) => (\r\n                        <Link\r\n                            className={clsx(classes.link, classes.colorPrimary)}\r\n                            to={`${url}/${item.link}`}\r\n                            key={item.label}\r\n                        >\r\n                            <ListItem button key={item.label}>\r\n                                <ListItemIcon className={classes.colorPrimary}>\r\n                                    {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={item.label} />\r\n                            </ListItem>\r\n                        </Link>\r\n                    ))}\r\n                </List>\r\n                <Divider />\r\n            </Paper>\r\n        </Drawer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n\r\n    // CUSTOMIZATION\r\n    colorPrimary: {\r\n        color: 'white',\r\n    },\r\n    colorBgPrimary: {\r\n        backgroundColor: '#181F47',\r\n    },\r\n}));\r\n\r\nexport default function Navbar() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            {/**HEADER*/}\r\n            <Header open={open} handleDrawerToggle={handleDrawerToggle} />\r\n            {/**SIDEBAR*/}\r\n            <Sidebar open={open} />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { ArgumentAxis, ValueAxis, Chart, LineSeries } from '@devexpress/dx-react-chart-material-ui';\r\n\r\nconst data = [\r\n    { argument: 1, value: 10 },\r\n    { argument: 2, value: 20 },\r\n    { argument: 3, value: 30 },\r\n];\r\n\r\nfunction View1() {\r\n    return (\r\n        <Paper>\r\n            <Chart data={data}>\r\n                <ArgumentAxis />\r\n                <ValueAxis />\r\n\r\n                <LineSeries valueField=\"value\" argumentField=\"argument\" />\r\n            </Chart>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default View1;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n    Chart,\r\n    ArgumentAxis,\r\n    ValueAxis,\r\n    BarSeries,\r\n    LineSeries,\r\n    Legend,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\n\r\nimport { ValueScale } from '@devexpress/dx-react-chart';\r\n\r\nexport default class Demo extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [\r\n                { month: 'Jan', sale: 50, total: 987 },\r\n                { month: 'Feb', sale: 100, total: 3000 },\r\n                { month: 'March', sale: 30, total: 1100 },\r\n                { month: 'April', sale: 107, total: 7100 },\r\n                { month: 'May', sale: 95, total: 4300 },\r\n                { month: 'June', sale: 150, total: 7500 },\r\n            ],\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { data: chartData } = this.state;\r\n\r\n        return (\r\n            <Paper>\r\n                <Chart data={chartData}>\r\n                    <ValueScale name=\"sale\" />\r\n                    <ValueScale name=\"total\" />\r\n\r\n                    <ArgumentAxis />\r\n                    <ValueAxis scaleName=\"sale\" showGrid={false} showLine showTicks />\r\n                    <ValueAxis\r\n                        scaleName=\"total\"\r\n                        position=\"right\"\r\n                        showGrid={false}\r\n                        showLine\r\n                        showTicks\r\n                    />\r\n\r\n                    <BarSeries\r\n                        name=\"Units Sold\"\r\n                        valueField=\"sale\"\r\n                        argumentField=\"month\"\r\n                        scaleName=\"sale\"\r\n                    />\r\n\r\n                    <LineSeries\r\n                        name=\"Total Transactions\"\r\n                        valueField=\"total\"\r\n                        argumentField=\"month\"\r\n                        scaleName=\"total\"\r\n                    />\r\n\r\n                    <Legend />\r\n                </Chart>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n","export const DIALOGFORM_OPEN = 'DIALOG_OPEN';\r\nexport const DIALOGFORM_CLOSE = 'DIALOG_CLOSE';\r\n","import * as actionTypes from '../actionTypes/dialogFormActionTypes';\r\n\r\nexport const dialogOpen = (payload) => {\r\n    return {\r\n        type: actionTypes.DIALOGFORM_OPEN,\r\n        payload: {\r\n            open: true,\r\n            ...payload\r\n        },\r\n    };\r\n};\r\n\r\nexport const dialogClose = (payload) => {\r\n    return {\r\n        type: actionTypes.DIALOGFORM_OPEN,\r\n        payload: {\r\n            open: false,\r\n        },\r\n    };\r\n};\r\n","export const TABLEDATA_ROW_ADD = 'TABLE_DATA_ADD';\r\nexport const TABLEDATA_ROW_EDIT = 'TABLE_DATA_EDIT';\r\nexport const TABLEDATA_ROW_REMOVE = 'TABLE_DATA_REMOVE';\r\n","import * as actionTypes from '../actionTypes/tableDataActionTypes';\r\n\r\nexport const tableDataRowAdd = (payload) => {\r\n    return {\r\n        type: actionTypes.TABLEDATA_ROW_ADD,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const tableDataRowEdit = payload => {\r\n    return {\r\n        type: actionTypes.TABLEDATA_ROW_EDIT,\r\n        payload,\r\n    }\r\n}\r\n\r\nexport const tableDataRowRemove = (payload) => {\r\n    return {\r\n        type: actionTypes.TABLEDATA_ROW_REMOVE,\r\n        payload,\r\n    };\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { dialogClose } from '../../../redux/actions/dialogFormActions';\r\nimport { tableDataRowAdd, tableDataRowEdit } from '../../../redux/actions/tableDataActions';\r\n\r\n//\r\n\r\nfunction DialogForm(props) {\r\n    const [fieldData, setFieldData] = useState({\r\n        id: null,\r\n        firstName: null,\r\n        lastName: null,\r\n        age: null,\r\n    });\r\n    const [input, setInput] = useState({ firstName: null, lastName: null, age: null });\r\n\r\n    useEffect(() => {\r\n        if (props.dialogForm.isNew) {\r\n            return;\r\n        } else if (props.dialogForm.id) {\r\n            const { id, firstName, lastName, age } = props.tableData.filter(\r\n                (el) => el.id === props.dialogForm.id\r\n            )[0];\r\n            setFieldData({ id, firstName, lastName, age });\r\n            setInput({ firstName, lastName, age });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.dialogForm]);\r\n\r\n    function handleClose() {\r\n        props.dialogFormClose();\r\n    }\r\n    function handleSubmit(e) {\r\n        if (props.dialogForm.isNew)\r\n            props.tableDataRowAdd({ id: props.tableData.length + 1, ...input });\r\n        else props.tableDataRowEdit({ id: fieldData.id, ...input });\r\n\r\n        handleClose();\r\n    }\r\n    function handleTextChange(field) {\r\n        return function (e) {\r\n            const obj = { ...input };\r\n            obj[field] = e.target.value;\r\n            setInput(obj);\r\n        };\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={!!props.dialogForm.open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Add </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>To add new row fill the form below.</DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"firstName\"\r\n                        label=\"Required\"\r\n                        fullWidth\r\n                        defaultValue={fieldData.firstName}\r\n                        onChange={handleTextChange('firstName')}\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"lastname\"\r\n                        label=\"Required\"\r\n                        fullWidth\r\n                        defaultValue={fieldData.lastName}\r\n                        onChange={handleTextChange('lastName')}\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"age\"\r\n                        label=\"Required\"\r\n                        type=\"number\"\r\n                        fullWidth\r\n                        defaultValue={fieldData.age}\r\n                        onChange={handleTextChange('age')}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleSubmit} color=\"primary\">\r\n                        Subscribe\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\n// Redux\r\nconst mapStatetoProps = (state) => ({\r\n    dialogForm: { ...state.dialogForm },\r\n    tableData: [...state.tableData],\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dialogFormClose: (payload) => dispatch(dialogClose(payload)),\r\n    tableDataRowAdd: (payload) => dispatch(tableDataRowAdd(payload)),\r\n    tableDataRowEdit: (payload) => dispatch(tableDataRowEdit(payload)),\r\n});\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(DialogForm);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Box, Button, makeStyles } from '@material-ui/core';\r\nimport { Add as AddIcon, Delete as DeleteIcon, Edit as EditIcon } from '@material-ui/icons';\r\nimport clsx from 'clsx';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { dialogOpen, dialogClose } from '../../../redux/actions/dialogFormActions';\r\nimport {\r\n    tableDataRowAdd,\r\n    tableDataRowEdit,\r\n    tableDataRowRemove,\r\n} from '../../../redux/actions/tableDataActions';\r\n\r\nimport DialogForm from '../components/DialogForm';\r\nimport styleConstants from '../../../constants/styleConstants';\r\n\r\nconst columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'firstName', headerName: 'First name', width: 130 },\r\n    { field: 'lastName', headerName: 'Last name', width: 130 },\r\n    { field: 'age', headerName: 'Age', type: 'number', width: 90 },\r\n    {\r\n        field: 'fullName',\r\n        headerName: 'Full name',\r\n        sortable: false,\r\n        width: 180,\r\n        valueGetter: (params) =>\r\n            `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\r\n    },\r\n];\r\n\r\nconst rows = [\r\n    { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\r\n    { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\r\n    { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\r\n    { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\r\n    { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\r\n    { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\r\n    { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\r\n    { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\r\n    { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\r\n    { id: 10, lastName: 'Swing', firstName: 'Ember', age: 23 },\r\n];\r\n\r\n//\r\nconst useStyles = makeStyles((theme) => ({\r\n    boxBtn: {\r\n        marginRight: '5px',\r\n    },\r\n    boxTable: {\r\n        height: 640,\r\n        width: '100%',\r\n        marginTop: '10px',\r\n    },\r\n    hidden: {\r\n        display: 'none',\r\n    },\r\n\r\n    // CUSTOM\r\n    colorPrimary: {\r\n        color: styleConstants.colorPrimary,\r\n        backgroundColor: styleConstants.colorBgPrimary,\r\n    },\r\n}));\r\n\r\n//\r\n\r\nfunction TableView(props) {\r\n    // Hooks\r\n    const classes = useStyles();\r\n    const [selected, setSelected] = useState([]);\r\n\r\n    useEffect(() => {\r\n        props.dialogFormClose();\r\n\r\n        rows.forEach((row) => {\r\n            props.tableDataRowAdd(row);\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [0]);\r\n\r\n    // Handlers\r\n    function handleSelection(newSelection) {\r\n        setSelected(newSelection.rowIds);\r\n    }\r\n\r\n    function handleClickAddBtn() {\r\n        props.dialogFormOpen({ isNew: true });\r\n    }\r\n    function handleClickEditBtn() {\r\n        props.dialogFormOpen({ id: selected[0] * 1 });\r\n    }\r\n    function handleClickDeleteBtn() {\r\n        console.log(selected);\r\n        selected.forEach((id) => {\r\n            props.tableDataRowRemove({ id: id * 1 });\r\n        });\r\n\r\n        setSelected([]);\r\n    }\r\n\r\n    //\r\n    return (\r\n        <>\r\n            <Box className={classes.boxBtns}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={clsx(classes.boxBtn)}\r\n                    startIcon={<AddIcon />}\r\n                    onClick={handleClickAddBtn}\r\n                >\r\n                    Add\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    className={clsx(classes.boxBtn, [selected.length !== 1 && classes.hidden])}\r\n                    startIcon={<EditIcon />}\r\n                    onClick={handleClickEditBtn}\r\n                >\r\n                    Edit\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={clsx(classes.boxBtn, [selected.length < 1 && classes.hidden])}\r\n                    startIcon={<DeleteIcon />}\r\n                    onClick={handleClickDeleteBtn}\r\n                >\r\n                    Delete\r\n                </Button>\r\n            </Box>\r\n\r\n            <DialogForm />\r\n\r\n            <Box className={classes.boxTable}>\r\n                <DataGrid\r\n                    rows={Object.values(props.tableData)}\r\n                    columns={columns}\r\n                    pageSize={10}\r\n                    checkboxSelection\r\n                    onSelectionChange={(newSelection) => {\r\n                        handleSelection(newSelection);\r\n                    }}\r\n                />\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\n\r\n// Redux\r\nconst mapStatetoProps = (state) => ({\r\n    dialogForm: { ...state.dialogForm },\r\n    tableData: { ...state.tableData },\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dialogFormOpen: (payload) => dispatch(dialogOpen(payload)),\r\n    dialogFormClose: (payload) => dispatch(dialogClose(payload)),\r\n    tableDataRowAdd: (payload) => dispatch(tableDataRowAdd(payload)),\r\n    tableDataRowEdit: (payload) => dispatch(tableDataRowEdit(payload)),\r\n    tableDataRowRemove: (payload) => dispatch(tableDataRowRemove(payload)),\r\n});\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(TableView);\r\n","import React from 'react';\r\nimport { Route, useRouteMatch, Switch } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nimport Navbar from './components/Navbar';\r\nimport View1 from './views/ChartView';\r\nimport View2 from './views/GraphView';\r\nimport View3 from './views/TableView';\r\nimport constStyles from '../../constants/styleConstants';\r\n\r\n//\r\nconst drawerWidth = constStyles.sideBarWidthExpand;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n}));\r\n\r\n//\r\n\r\nfunction Dashboard() {\r\n    const classes = useStyles();\r\n    const { path } = useRouteMatch();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Navbar />\r\n            <main className={clsx(classes.content, {})}>\r\n                <div className={classes.drawerHeader} />\r\n                <Switch>\r\n                    <Route path={`${path}/overview`}>\r\n                        <View1 />\r\n                    </Route>\r\n                    <Route path={`${path}/sales`}>\r\n                        <View2 />\r\n                    </Route>\r\n                    <Route path={`${path}/analytics`}>\r\n                        <View3 />\r\n                    </Route>\r\n                </Switch>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import './assets/css/App.css';\r\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport Login from './pages/login';\r\nimport Logout from './pages/logout';\r\nimport Home from './pages/home';\r\nimport Dashboard from './pages/dashboard';\r\n\r\nfunction App() {\r\n    const cookies = new Cookies();\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path=\"/login\">\r\n                        {cookies.get('auth') && <Redirect to=\"/\" />}\r\n                        <Login />\r\n                    </Route>\r\n\r\n                    {!cookies.get('auth') && <Redirect to=\"/login\" />}\r\n                    <Route exact path=\"/\">\r\n                        <Home />\r\n                    </Route>\r\n                    <Route path=\"/dashboard\">\r\n                        <Dashboard />\r\n                    </Route>\r\n\r\n                    <Route exact path=\"/logout\">\r\n                        <Logout />\r\n                    </Route>\r\n                    <Route path=\"*\">\r\n                        <Redirect to=\"/\" />\r\n                    </Route>\r\n                </Switch>\r\n                {/* <Footer /> */}\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from 'redux';\r\nimport dialogFormReducer from './dialogReducer';\r\nimport tableDataReducer from './tableDataReducer';\r\n\r\nconst allReducers = combineReducers({\r\n    dialogForm: dialogFormReducer,\r\n    tableData: tableDataReducer,\r\n});\r\n\r\nexport default allReducers;\r\n","import * as actionTypes from '../actionTypes/dialogFormActionTypes';\r\n\r\nexport default function dialogReducer(state = {}, action) {\r\n    switch (action.type) {\r\n        case actionTypes.DIALOGFORM_OPEN:\r\n            return  action.payload ;\r\n\r\n        case actionTypes.DIALOGFORM_CLOSE:\r\n            return { open: action.payload.open };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import * as actionTypes from '../actionTypes/tableDataActionTypes';\r\n\r\nexport default function tableDataReducer(state = [], action) {\r\n    switch (action.type) {\r\n        case actionTypes.TABLEDATA_ROW_ADD:\r\n            return [...state, action.payload];\r\n\r\n        case actionTypes.TABLEDATA_ROW_EDIT: {\r\n            return state.map((el) => {\r\n                if (el.id === action.payload.id) {\r\n                    return action.payload;\r\n                }\r\n                return el;\r\n            });\r\n        }\r\n\r\n        case actionTypes.TABLEDATA_ROW_REMOVE:\r\n            return state.filter((el) => el.id !== action.payload.id);\r\n\r\n        default:\r\n            return [...state];\r\n    }\r\n}\r\n","import { createStore } from 'redux';\r\nimport allReducers from './reducers/';\r\n\r\nexport default createStore(\r\n    allReducers,\r\n    [],\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    // </React.StrictMode>\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}